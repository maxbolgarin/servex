# Servex Proxy Gateway Configuration

# Basic server configuration
server:
  http: ":8080"
  # https: ":8443"
  # cert_file: "/etc/ssl/certs/gateway.crt"
  # key_file: "/etc/ssl/private/gateway.key"
  
  # Timeouts matching main.go settings
  read_timeout: "60s"
  read_header_timeout: "30s"
  idle_timeout: "180s"
  
  # Health and metrics endpoints
  enable_health_endpoint: true
  enable_default_metrics: true
  
  # Request size limits (production settings)
  max_request_body_size: 67108864    # 64MB
  enable_request_size_limits: true

rate_limit:
  enabled: true
  requests_per_interval: 1000
  interval: "1m"

filter:
  blocked_user_agents_regex:
    - "(?i)(bot|crawler|spider|scraper|curl|wget)"

  blocked_query_params_regex:
    search: ["(?i)(union|select|drop|delete|insert|update)"]
    query: ["(?i)(union|select|drop|delete|insert|update)"]
    q: ["(?i)(union|select|drop|delete|insert|update)"]



# L7 Reverse Proxy Configuration
proxy:
  enabled: true
  
  # Global proxy settings (matches main.go)
  global_timeout: "30s"
  max_idle_conns: 200                # Increased from 100 to match main.go
  max_idle_conns_per_host: 50        # Increased from 20 to match main.go
  idle_conn_timeout: "90s"

  
  # Health checking configuration 
  health_check:
    enabled: true
    default_interval: "30s"
    timeout: "5s"
    retry_count: 3
  
  # Proxy routing rules (TODO: make it yours)
  rules:
    # Main API backend - Weighted Round Robin
    - name: "api-backend"
      path_prefix: "/api/"
      methods: [GET, POST, PUT, DELETE, PATCH]    # Added PATCH to match main.go
      backends:
        - url: "http://api1.internal:8080"
          weight: 3                   # 50% of traffic
          health_check_path: "/health"
          health_check_interval: "30s"
          max_connections: 100
        - url: "http://api2.internal:8080"
          weight: 2                   # 33% of traffic
          health_check_path: "/health"
          health_check_interval: "30s"
          max_connections: 100
        - url: "http://api3.internal:8080"
          weight: 1                   # 17% of traffic
          health_check_path: "/health"
          health_check_interval: "30s"
          max_connections: 50
      load_balancing: "weighted_round_robin"
      strip_prefix: "/api"            # Remove /api before forwarding
      timeout: "25s"
    
    # Authentication service - Least Connections
    - name: "auth-service"
      path_prefix: "/auth/"
      methods: [POST, PUT]            # Matches main.go exactly
      backends:
        - url: "http://auth1.internal:8081"
          weight: 1
          health_check_path: "/ping"
          health_check_interval: "15s"
          max_connections: 50
        - url: "http://auth2.internal:8081"
          weight: 1
          health_check_path: "/ping"
          health_check_interval: "15s"
          max_connections: 50
      load_balancing: "least_connections"
      strip_prefix: "/auth"
      add_prefix: "/v1"               # Add /v1 prefix for backend
      timeout: "10s"
    
    # User service - IP Hash (Session Affinity)
    - name: "user-service"
      host: "users.example.com"       # Route based on Host header
      backends:
        - url: "http://users1.internal:8082"
          weight: 1
          health_check_path: "/status"
          health_check_interval: "45s"
          max_connections: 75
        - url: "http://users2.internal:8082"
          weight: 1
          health_check_path: "/status"
          health_check_interval: "45s"
          max_connections: 75
      load_balancing: "ip_hash"       # Session affinity
      timeout: "20s"
    
    # Static CDN - Random Selection
    - name: "static-cdn"
      path_prefix: "/static/"
      methods: [GET, HEAD]
      backends:
        - url: "http://cdn1.internal:8083"
          weight: 1
          max_connections: 200        # No health check for CDN
        - url: "http://cdn2.internal:8083"
          weight: 1
          max_connections: 200
        - url: "http://cdn3.internal:8083"
          weight: 1
          max_connections: 200
      load_balancing: "random"
      strip_prefix: "/static"
      timeout: "15s"
    
    # Payment service - Round Robin with header routing
    - name: "payment-service"
      path_prefix: "/payments/"
      methods: [POST, GET]
      headers:
        "X-API-Version": "v2"         # Only route v2 API calls
      backends:
        - url: "http://payments1.internal:8084"
          weight: 1
          health_check_path: "/health"
          health_check_interval: "20s"
          max_connections: 30
        - url: "http://payments2.internal:8084"
          weight: 1
          health_check_path: "/health"
          health_check_interval: "20s"
          max_connections: 30
      load_balancing: "round_robin"
      strip_prefix: "/payments"
      timeout: "30s"                  # Longer timeout for payments


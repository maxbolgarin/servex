# Sample Proxy Server Configuration
# Use with: ./proxy-server -config=proxy-config.yaml

# Basic server configuration
server:
  http: ":8080"
  read_timeout: "30s"
  idle_timeout: "120s"

# Enable health and metrics endpoints
enable_health_endpoint: true
health_path: "/health"
enable_default_metrics: true
metrics_path: "/metrics"

# Rate limiting to protect backends
rate_limit:
  enabled: true
  requests_per_interval: 1000  # 1000 requests per minute
  interval: "1m"
  burst_size: 100
  exclude_paths:
    - "/health"
    - "/metrics"
    - "/proxy/status"

# Request filtering for security
filter:
  # Block common bots and scrapers
  blocked_user_agents_regex:
    - "(?i)(bot|crawler|spider|scraper)"
    - "(?i)(curl|wget|python-requests)"
  
  # Block SQL injection attempts
  blocked_query_params_regex:
    search: ["(?i)(union|select|drop|delete|insert|update)"]
    q: ["(?i)(union|select|drop|delete|insert|update)"]
  
  status_code: 403
  message: "Request blocked by security filter"

# Security headers
security:
  enabled: true
  x_frame_options: "DENY"
  x_content_type_options: "nosniff"
  referrer_policy: "strict-origin-when-cross-origin"

# L7 Reverse Proxy Configuration
proxy:
  enabled: true
  
  # Global proxy settings
  global_timeout: "30s"
  max_idle_conns: 100
  max_idle_conns_per_host: 20
  idle_conn_timeout: "90s"
  
  # Traffic dumping for analysis
  traffic_dump:
    enabled: true
    directory: "./traffic_dumps"
    max_file_size: 50000000     # 50MB per file
    max_files: 10               # Keep 10 files
    include_body: true
    max_body_size: 32768        # 32KB max body
    sample_rate: 0.2            # Sample 20% of traffic
  
  # Health checking
  health_check:
    enabled: true
    default_interval: "30s"
    timeout: "5s"
    retry_count: 2
  
  # Proxy routing rules
  rules:
    # Main API backend
    - name: "api-service"
      path_prefix: "/api/"
      methods: [GET, POST, PUT, DELETE]
      backends:
        - url: "http://localhost:8081"
          weight: 2
          health_check_path: "/health"
          health_check_interval: "30s"
          max_connections: 50
        - url: "http://localhost:8082"
          weight: 1
          health_check_path: "/health"
          health_check_interval: "30s"
          max_connections: 50
      load_balancing: "weighted_round_robin"
      strip_prefix: "/api"
      timeout: "25s"
      enable_traffic_dump: true
    
    # Authentication service
    - name: "auth-service"
      path_prefix: "/auth/"
      methods: [POST]
      backends:
        - url: "http://localhost:8083"
          weight: 1
          health_check_path: "/ping"
          health_check_interval: "15s"
          max_connections: 30
      load_balancing: "round_robin"
      strip_prefix: "/auth"
      add_prefix: "/v1"
      timeout: "10s"
      enable_traffic_dump: true
    
    # Static content CDN
    - name: "static-assets"
      path_prefix: "/static/"
      methods: [GET, "HEAD"]
      backends:
        - url: "http://localhost:8084"
          weight: 1
          max_connections: 100
        - url: "http://localhost:8085"
          weight: 1
          max_connections: 100
      load_balancing: "random"
      strip_prefix: "/static"
      timeout: "15s"
      enable_traffic_dump: false  # Don't dump static content

# Enhanced logging
logging:
  disable_request_logging: false
  log_fields:
    - "method"
    - "url"
    - "status"
    - "duration"
    - "ip"
    - "user_agent" 